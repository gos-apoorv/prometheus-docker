version: '3.1'

services:
  prometheus:
    image: prom/prometheus
    volumes:
      - ./prometheus:/prometheus
      - ./data/prometheus:/data
    command:
      - '--config.file=/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/data'
    ports:
      - 9092:9090
    depends_on:
      - alertmanager
    restart: always
    networks:
      - promnet

  grafana:
    image: grafana/grafana:latest
    restart: unless-stopped
    command:
      - '-config=/prometheus/grafana.yml'
    volumes:
      - ./data/grafana:/var/lib/grafana
      - ./prometheus:/prometheus
    environment:
      - GF_SECURITY_ADMIN_USER=MYUSER
      - GF_SECURITY_ADMIN_PASSWORD=MYPASSWORD
      - GF_USERS_ALLOW_SIGN_UP=false
    ports:
      - 9080:3000
    networks:
      - promnet

  alertmanager:
    image: prom/alertmanager
    volumes:
      - ./prometheus:/prometheus
      - ./data/alertmanager:/data
    restart: always
    command:
      - '--config.file=/prometheus/alertmanager.yml'
      - '--storage.path=/data'
    ports:
      - 9093:9093
    networks:
      - promnet

  node:
    image: prom/node-exporter
    ports:
      - 9100:9100
    restart: always
    networks:
      - promnet

  pushgateway:
    image: prom/pushgateway
    ports:
        - 9091:9091
    expose: 
        - 9091
    restart: always
    networks:
        - promnet   

  cadvisor:
    image: google/cadvisor
    ports:
      - "9880:8080" #8080
    restart: always
    volumes:
      - /:/rootfs:ro
      - /var/run:/var/run:rw
      - /sys:/sys:ro    
      - /var/lib/docker/:/var/lib/docker:ro
    networks:
      - promnet

  collectd:
    image: prom/collectd-exporter
    ports:
      - 9103:9103
    restart: always
    networks:
      - promnet

  alerta:
    image: alerta/alerta-web
    ports:
      - 9080:8080
    depends_on:
      - db
    environment:
      - DEBUG=1  # remove this line to turn DEBUG off
      - DATABASE_URL=mongodb://db:27017/monitoring
      # - AUTH_REQUIRED=True
      - ADMIN_USERS=admin@alerta.io
      - PLUGINS=remote_ip,reject,heartbeat,blackout,prometheus
      - ALERTMANAGER_API_URL=http://alertmanager:9093
    restart: always
    networks:
      - promnet
      - dbnet

  db:
    image: mongo
    volumes:
      - ./data/mongodb:/data/db
    restart: always
    networks:
      - dbnet

  dbpostgres:
    image: postgres:9.6
    restart: always
    ports:
      - 5432:5432
    environment:
      POSTGRES_USER: adminbq
      POSTGRES_PASSWORD: pass123
      POSTGRES_DB: my_db
    networks:
      - dbnet
    volumes:
      - postgres-data:/var/lib/postgresql/data/ # persist data even if container shuts down
    # Connection in cli: psql "dbname=my_db host=localhost user=adminbq password=pass123 port=5432"
    # https://dev.to/sonyarianto/how-to-spin-mysql-server-with-docker-and-docker-compose-33b2

  adminer:
    image: adminer
    restart: always
    ports:
      - 9095:8080
    networks:
      - dbnet

networks:
  promnet:
    driver: bridge
  dbnet:
    driver: bridge

volumes:
  postgres-data: # named volumes can be managed easier using docker-compose